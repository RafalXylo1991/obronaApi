
const bcrypt = require("bcrypt");
const { Client } = require('pg')
const create  = `
CREATE TABLE users (
    id integer,
    name varchar,
    password varchar,
    wallet integer,
    email varchar,
    phoneNumber integer,
    accountNumber varchar,
    pin integer,
    currencyCode varchar
);
`


var json = require('json');
const client = new Client({
    user: 'postgres',
    host: 'localhost',
    database: 'postgres',
    password: 'xylo',
    port: 5432,
  })
async function connect(){
   
  
    client.connect();
    

}

async function addNewUser(user){
   return new Promise(async (resolve,reject )=>{
var users=[]
var oneuser;
console.log(user)
const quary = " INSERT INTO users (id,name, password, wallet,email,phoneNumber,accountNumber,pin,currencyCode) VALUES ("+1+",'"+user.name+"','"+user.password+"','"+user.wallet+"','"+user.email+"','"+user.phoneNumber+"','"+user.accountNumber+"','"+user.pin+"','"+user.currencyCode+"');"
client.query(quary, (err, res) => {
   if (err) {
       console.error(err);
       return;
   }else{
    resolve("User has been added")
   }
   
   
});
   })
  
}
async function getUserById(id){
   
  
    if(!client.connect()) {connect()};
    return new Promise(async (resolve,reject)=>{
        const quary = " select * from users where id="+id
       await client.query(quary, (err, res) => {
            if (err) {
                console.error(err);
                return;
            }
            console.log('Table is successfully created');
            client.end();
            resolve(res.rows)
           
            
    
        });
    
      })
}

async function deleteUser(name){
   
  
    return new  Promise(async (resolve,reject)=>{
        const quary = " delete from users where name='"+name+"'"
       await client.query(quary, async (err, res) => {
            if (err) {
                console.error(err);
                return;
            }else{

                resolve("User has been deleted")
            }
          
          
            
            
            
           
          
           
        });
    
      }) 
}
async function getAllUsers(name,password){
   

  
 
  
   
    
   return new  Promise(async (resolve,reject)=>{
    const quary = " select * from users"
   await client.query(quary, async (err, res) => {
        if (err) {
            console.error(err);
            return;
        }
      
        users=JSON.parse(JSON.stringify(res.rows))
        for(i=0;i<users.length;i++){
           
            if(users[i].name==name){
          
               if(await bcrypt.compare(password, users[i].password)){
                
                  
                 resolve(users[i])
                   
               }else{
                   reject("Premission denied")
                  
               }
          
            }
        }
        reject("User has not been found")
        
       
      
       
    });

  }) 
}
module.exports = { connect,addNewUser,getAllUsers,getUserById,deleteUser } 

